<?php

namespace pantera\discussions\models;

use Yii;
use yii\web\BadRequestHttpException;

/**
 * This is the model class for table "message_boards".
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $client_id
 * @property string $title
 * @property string $main_message
 */
class MessageBoards extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'message_boards';
    }

    public function beforeDelete()
    {
        if($this->user_id != Yii::$app->user->id) throw new BadRequestHttpException('Bad request');
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }


    public function getAvatar() {
        $modulePropertity = Yii::$app->getModule('discussion')->userAvatarPropertity;
        if(!empty($modulePropertity) && !empty($this->user->{$modulePropertity})) return $this->user->{$modulePropertity};
        return 'http://cdn.wpbeginner.com/wp-content/uploads/2012/08/gravatarlogo.jpg';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id'], 'required'],
            [['user_id', 'client_id'], 'integer'],
            [['main_message'], 'string'],
            [['title'], 'string', 'max' => 255],
        ];
    }
    public function getUser(){
        return $this->hasOne(Yii::$app->getModule('discussion')->userModel,['id'=> 'user_id']);
    }

    public function getCommentsCount(){
        $connect = Yii::$app->db;
        $sqli = "SELECT COUNT(*) FROM comment WHERE relatedTo = ".$connect->quoteValue(self::className().":".$this->id);

        $result = $connect->createCommand($sqli)->queryScalar();
        return $result;

    }

    public function beforeSave($insert)
    {
        if($this->isNewRecord) {
            $this->user_id = Yii::$app->user->id;
        }
        if(empty($this->title)){
            $this->title = "Без названия";
        }
           return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'User ID',
            'client_id' => 'Client ID',
            'title' => 'Title',
            'main_message' => 'Main Message',
        ];
    }
}
